#include <bits/stdc++.h>
#include <stack>

stack<char> stack;

int precedence(char op){
    if(op=='(')return 0;
    if(op == '+' || op == '-')return 1;
    if(op=='*' || op == '/' || op == '%')return 2;
    if(op == '^')return 3;
}

void infix_to_postfix(string infix,string postfix){
    int i=0,pos =0;
    while(infix[i]!="\0"){
        char ch = infix[i];
        if(ch == '(')
        stack.push('(');
        else if(isalpha(ch))
        postfix[pos++]=ch;
        else if(ch==')'){
            char symbol = stack.pop();
            while(symbol != '('){
                postfix[pos++]=symbol;
                symbol=stack.pop();
            }
        }
        else{
            while(precedence(ch)<precedence(stack.top())){
                char symbol = stack.pop();
                postfix[pos++]=symbol;
            }
        }
        i++;
    }
    while(!stack.empty()){
         postfix[pos++]=symbol;
        symbol=stack.pop();
    }
}


int main()
{
    string infix;
    cin>>infix;
    string pos;
    infix_to_postfix(infix,pos);
    cout<<pos;
    

    return 0;
}
